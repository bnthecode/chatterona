[{"C:\\Code\\projects\\chatteroni\\src\\index.js":"1","C:\\Code\\projects\\chatteroni\\src\\reportWebVitals.js":"2","C:\\Code\\projects\\chatteroni\\src\\redux\\history.js":"3","C:\\Code\\projects\\chatteroni\\src\\redux\\store.js":"4","C:\\Code\\projects\\chatteroni\\src\\styles\\muiTheme.js":"5","C:\\Code\\projects\\chatteroni\\src\\App.js":"6","C:\\Code\\projects\\chatteroni\\src\\redux\\reducers\\rootReducer.js":"7","C:\\Code\\projects\\chatteroni\\src\\firebase.js":"8","C:\\Code\\projects\\chatteroni\\src\\components\\Header.js":"9","C:\\Code\\projects\\chatteroni\\src\\redux\\actions\\authActions.js":"10","C:\\Code\\projects\\chatteroni\\src\\pages\\Login.js":"11","C:\\Code\\projects\\chatteroni\\src\\components\\Servers.js":"12","C:\\Code\\projects\\chatteroni\\src\\components\\Channels.js":"13","C:\\Code\\projects\\chatteroni\\src\\components\\Drawer.js":"14","C:\\Code\\projects\\chatteroni\\src\\redux\\reducers\\authReducer.js":"15","C:\\Code\\projects\\chatteroni\\src\\redux\\reducers\\appReducer.js":"16","C:\\Code\\projects\\chatteroni\\src\\redux\\actions\\appActions.js":"17"},{"size":1096,"mtime":1612227653895,"results":"18","hashOfConfig":"19"},{"size":375,"mtime":1612218641485,"results":"20","hashOfConfig":"19"},{"size":115,"mtime":1612227653897,"results":"21","hashOfConfig":"19"},{"size":896,"mtime":1612227653900,"results":"22","hashOfConfig":"19"},{"size":335,"mtime":1612241281914,"results":"23","hashOfConfig":"19"},{"size":3071,"mtime":1612238247464,"results":"24","hashOfConfig":"19"},{"size":359,"mtime":1612235082774,"results":"25","hashOfConfig":"19"},{"size":647,"mtime":1612227653894,"results":"26","hashOfConfig":"19"},{"size":603,"mtime":1612236694334,"results":"27","hashOfConfig":"19"},{"size":111,"mtime":1612227653897,"results":"28","hashOfConfig":"19"},{"size":891,"mtime":1612235237321,"results":"29","hashOfConfig":"19"},{"size":2678,"mtime":1612243903092,"results":"30","hashOfConfig":"19"},{"size":3152,"mtime":1612244287258,"results":"31","hashOfConfig":"19"},{"size":761,"mtime":1612243878774,"results":"32","hashOfConfig":"19"},{"size":394,"mtime":1612239695250,"results":"33","hashOfConfig":"19"},{"size":551,"mtime":1612239899596,"results":"34","hashOfConfig":"19"},{"size":117,"mtime":1612239977556,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"10ro2cp",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Code\\projects\\chatteroni\\src\\index.js",["73","74"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport theme from \"./styles/muiTheme\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport history from \"./redux/history\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <MuiThemeProvider theme={theme}>\r\n            <App />\r\n          </MuiThemeProvider>\r\n        </PersistGate>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"C:\\Code\\projects\\chatteroni\\src\\reportWebVitals.js",[],"C:\\Code\\projects\\chatteroni\\src\\redux\\history.js",[],"C:\\Code\\projects\\chatteroni\\src\\redux\\store.js",[],"C:\\Code\\projects\\chatteroni\\src\\styles\\muiTheme.js",[],"C:\\Code\\projects\\chatteroni\\src\\App.js",["77","78","79","80"],"import { Button } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Drawer from \"./components/Drawer\";\r\nimport Channels from './components/Channels'\r\nimport Servers from './components/Servers'\r\nimport Header from \"./components/Header\";\r\nimport db, { auth as firebaseAuth, provider } from \"./firebase\";\r\nimport Login from \"./pages/Login\";\r\nimport { logInUserRedux } from \"./redux/actions/authActions\";\r\n\r\nfunction App({ auth, logInUser }) {\r\n\r\n  const [isLoggedIn, setLoggedIn] = useState(firebaseAuth.currentUser);\r\n  // const [serverId, setServerId] = useState()\r\n  // const [channelId, setChannelId] = useState()\r\n\r\n  const handleLogin = (user) => {\r\n    logInUser(user);\r\n    setLoggedIn(true);\r\n  }\r\n\r\n  const logout = () => {\r\n\r\n    logInUser({});\r\n    firebaseAuth.signOut().then(user => setLoggedIn(false));\r\n  }\r\n\r\n  // const addCollection = () => {\r\n  //   db.collection(\"server\").add({\r\n  //     name: \"First Server\",\r\n  //     country: \"USA\",\r\n  //   })\r\n  //     .then(docRef => setServerId(docRef.id))\r\n  //     console.log(\"server added\")\r\n  // }\r\n\r\n  // const addChannel = () => {\r\n  //   db.collection('channels').add({\r\n  //     serverId: serverId,\r\n  //     name: \"channelNumber1\",\r\n  //   })\r\n  //   .then(docRef => setChannelId(docRef.id))\r\n  //   console.log(\"channel added\")\r\n  // }\r\n\r\n  // const addMessages = () => {\r\n  //   db.collection('messages').add({\r\n  //     channelId: channelId,\r\n  //     user: \"Evan\",\r\n  //     message: \"Hey this is the first message\",\r\n  //     //timeStamp: db.FieldValue.serverTimestamp()\r\n  //   })\r\n  //   console.log(\"message added\")\r\n  // }\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"#eee\", height: '100vh', width: \"100%\" }}>\r\n      {isLoggedIn ? (\r\n        <>\r\n          <Header />\r\n          <Channels />\r\n          <Servers />\r\n          <Button\r\n            style={{ position: \"absolute\", top: \"25%\", left: \"50%\" }}\r\n            onClick={logout}\r\n          >\r\n            {\" \"}\r\n            Log out\r\n          </Button>\r\n          {/* <Button\r\n            style={{ position: \"absolute\", top: \"45%\", left: \"50%\" }}\r\n            onClick={addCollection}\r\n          >\r\n            Create a Server\r\n          </Button>\r\n          <Button\r\n            style={{ position: \"absolute\", top: \"65%\", left: \"50%\" }}\r\n            onClick={addChannel}\r\n          >\r\n            Create a Channel\r\n          </Button>\r\n          <Button\r\n            style={{ position: \"absolute\", top: \"85%\", left: \"50%\" }}\r\n            onClick={addMessages}\r\n          >\r\n            Create a Message\r\n          </Button> */}\r\n        </>\r\n      ) : (\r\n          <Login handleLogin={handleLogin} />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logInUser: dispatch(logInUserRedux),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// collections\r\n  // servers -->\r\n       // --> channels\r\n            // ---> message ","C:\\Code\\projects\\chatteroni\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Code\\projects\\chatteroni\\src\\firebase.js",[],"C:\\Code\\projects\\chatteroni\\src\\components\\Header.js",[],"C:\\Code\\projects\\chatteroni\\src\\redux\\actions\\authActions.js",[],"C:\\Code\\projects\\chatteroni\\src\\pages\\Login.js",[],"C:\\Code\\projects\\chatteroni\\src\\components\\Servers.js",["81","82"],"C:\\Code\\projects\\chatteroni\\src\\components\\Channels.js",["83","84","85","86"],"C:\\Code\\projects\\chatteroni\\src\\components\\Drawer.js",[],"C:\\Code\\projects\\chatteroni\\src\\redux\\reducers\\authReducer.js",[],"C:\\Code\\projects\\chatteroni\\src\\redux\\reducers\\appReducer.js",[],"C:\\Code\\projects\\chatteroni\\src\\redux\\actions\\appActions.js",[],{"ruleId":"87","severity":1,"message":"88","line":10,"column":10,"nodeType":"89","messageId":"90","endLine":10,"endColumn":25},{"ruleId":"87","severity":1,"message":"91","line":11,"column":8,"nodeType":"89","messageId":"90","endLine":11,"endColumn":15},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"87","severity":1,"message":"96","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"97","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":14},{"ruleId":"87","severity":1,"message":"98","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":10},{"ruleId":"87","severity":1,"message":"99","line":8,"column":36,"nodeType":"89","messageId":"90","endLine":8,"endColumn":44},{"ruleId":"87","severity":1,"message":"100","line":6,"column":3,"nodeType":"89","messageId":"90","endLine":6,"endColumn":13},{"ruleId":"101","severity":1,"message":"102","line":34,"column":13,"nodeType":"103","endLine":37,"endColumn":4},{"ruleId":"87","severity":1,"message":"104","line":11,"column":10,"nodeType":"89","messageId":"90","endLine":11,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":29,"column":13,"nodeType":"103","endLine":35,"endColumn":4},{"ruleId":"101","severity":1,"message":"105","line":35,"column":6,"nodeType":"106","endLine":35,"endColumn":25,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":82,"column":19,"nodeType":"110","endLine":82,"endColumn":45},"no-unused-vars","'ConnectedRouter' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'useEffect' is defined but never used.","'Drawer' is defined but never used.","'db' is defined but never used.","'provider' is defined but never used.","'Typography' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'ArrowDropDown' is defined but never used.","React Hook useEffect has a missing dependency: 'getChannels'. Either include it or remove the dependency array.","ArrayExpression",["113"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [getChannels, selectedServer.id]",{"range":"116","text":"117"},[973,992],"[getChannels, selectedServer.id]"]